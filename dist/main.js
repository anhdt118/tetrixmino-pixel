(()=>{"use strict";const i=class{constructor(i){this.ctx=i}draw(){}moveBy(){}},s={speed:1500,defaultSpeed:1500,bgColor:"white",minoColor:"green",colors:["red","green","blue","orange","magenta","pink","yellow","cyan","gray","brown"]},t=class extends i{constructor(i){super(i),this.types=[{minos:[[0,0,0],[0,0,0],[0,0,0]],size:[3,3]}],this.type=0,this.pType=this.types[this.type],this.minos=this.types[this.type].minos,this.size=this.types[this.type].size,this.dimension=[-1,0],this.psx=0,this.psy=0,this.bgColor=s.minoColor,this.minoSize=s.minoSize,this.speed=s.speed,this.runner=null,this.done=!1}selectColor(i){return s.colors[i]}draw(i){this.bgColor=i,this.ctx.fillStyle=this.bgColor;for(var s=this.size[0]-1;s>=0;s--)for(var t=0;t<this.size[1];t++)this.psy=(this.dimension[0]+s)*this.minoSize,this.psx=(this.dimension[1]+t)*this.minoSize,0!=this.minos[s][t]&&(this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(this.psx,this.psy,this.minoSize,this.minoSize))}rotate(){if(this.done)return!1;this.undraw(),this.toggle(),this.draw(this.minoColor)}toggle(){this.type+1==this.types.length?this.type=0:this.type++;let i=this.types[this.type];this.minos=i.minos,this.size=i.size}undraw(){for(var i=this.size[0]-1;i>=0;i--)for(var s=0;s<this.size[1];s++)0!=this.minos[i][s]&&(this.psy=(this.dimension[0]+i)*this.minoSize,this.psx=(this.dimension[1]+s)*this.minoSize,this.ctx.clearRect(this.psx-1,this.psy-1,this.minoSize+2,this.minoSize+2))}moveBy(i,s){if(this.done)return!1;let t=0;null!=this.pType&&this.pType.size[0]!=this.size[0]&&(t=this.size[0]-this.pType.size[0]);let e=this.dimension[0]+i+t;if(e>=this.board.rows-2)return this.done=!0,this.board.prepareToCreate=!0,this.board.fill(this),window.postMessage({sender:"tetrixmino",event:"move_by",status:"done"}),this.done;e!=this.board.rows&&this.undraw();let o=this.dimension[1]+s;o>=0&&o+this.size[1]<=this.board.columns&&(this.dimension[1]+=s),this.dimension[0]+=i,this.draw(this.minoColor)}run(){let i=this;this.runner=window.setInterval((function(){i.moveBy(1,0)}),this.speed)}stop(){window.clearInterval(this.runner),this.runner=null}setup(){let i=this;document.addEventListener("keydown",(function(s){switch(s.key){case"p":null!=i.runner?i.stop():i.run();break;case"ArrowLeft":i.moveBy(0,-1);break;case"ArrowRight":i.moveBy(0,1);break;case"ArrowUp":i.rotate();break;case"ArrowDown":i.moveBy(1,0)}})),document.addEventListener("keyup",(function(t){i.speed=s.speed}))}},e=class extends t{constructor(i){super(i),this.types=[{minos:[[1,0,0],[1,1,1]],size:[2,3]},{minos:[[1,0],[1,0],[1,1]],size:[3,2]},{minos:[[1,1,1],[1,0,0]],size:[2,3]},{minos:[[1,1],[0,1],[0,1]],size:[3,2]},{minos:[[0,0,1],[1,1,1]],size:[2,3]},{minos:[[1,0,1],[0,1,0]],size:[2,3]},{minos:[[1,0,1],[0,1,0],[1,0,1]],size:[3,3]}],this.type=0,this.minos=this.types[this.type].minos,this.size=this.types[this.type].size,this.dimension=[-1,0]}},o=class extends t{constructor(i){super(i),this.types=[{minos:[[0,1,1],[1,1,0]],size:[2,3]},{minos:[[1,0],[1,1],[0,1]],size:[3,2]}],this.type=0,this.minos=this.types[this.type].minos,this.size=this.types[this.type].size,this.dimension=[-1,0]}},n=class extends t{constructor(i){super(i),this.types=[{minos:[[1],[1],[1],[1]],size:[4,1]},{minos:[[1,1,1,1]],size:[1,4]}],this.type=0,this.minos=this.types[this.type].minos,this.size=this.types[this.type].size,this.dimension=[-1,0]}};function r(i,s){return Math.floor(Math.random()*(s-i+1)+i)}const h=class extends i{constructor(i,t=null,e=null){super(i),this.prepareToCreate=!0,this.gridSize=[],this.bgColor=s.bgColor,this.minoColor=s.minoColor,this.minoSize=null,this.speed=s.speed,this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),null!=t&&null!=e&&(this.rows=t,this.columns=e,this.dimension=this.initDimension(this.rows,this.columns),this.colors=this.initColors(this.bgColor,this.rows,this.columns)),this.tetrixmino=null}start(){let i=this;return this.tetrixmino=this.createTetrixmino(r(1,2)),this.tetrixmino&&(this.tetrixmino.draw(this.tetrixmino.minoColor),this.tetrixmino.run()),window.onmessage=function(s){"tetrixmino"==s.data.sender&&i.start()},this.tetrixmino}createTetrixmino(i){if(!this.prepareToCreate)return!1;var t;switch(i){case 1:t=new e(this.ctx);break;case 2:t=new o(this.ctx);break;default:t=new n(this.ctx)}return this.prepareToCreate=!1,t.board=this,t.minoSize=this.minoSize,t.bgColor=this.bgColor,t.minoColor=t.selectColor(r(0,s.colors.length-1)),t.setup(),t}initDimension(i,s){for(var t=[],e=0;e<i;e++){t[e]=[];for(var o=0;o<s;o++)t[e][o]=0}return t}initColors(i,s,t){for(var e=[],o=0;o<s;o++){e[o]=[];for(var n=0;n<t;n++)e[o][n]=i}return e}fill(i){for(var s,t,e=i.size[0]-1;e>=0;e--)for(var o=0;o<i.size[1];o++)s=i.dimension[0]+e,t=i.dimension[1]+o,i.psy=s*i.minoSize,i.psx=t*i.minoSize,0!=i.minos[e][o]?(this.dimension[s][t]=1,this.colors[s][t]=i.minoColor):0!=this.dimension[s][t]&&(this.ctx.fillStyle=this.colors[s][t],this.ctx.fillRect(i.psx,i.psy,i.minoSize,i.minoSize))}};!function(){var i=document.getElementById("canvas");i.width=parseInt(window.innerWidth)-50,i.height=parseInt(window.innerHeight)-50;var s=Math.floor(i.width/15),t=Math.floor(i.height/s),e=i.getContext("2d"),o=new h(e,t,15);o.minoSize=s,o.start()}()})();